digraph "utility::ipc::AbstractMessage"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="utility::ipc::AbstractMessage",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="utility::ipc::ReceivedBoundary\lMessage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classutility_1_1ipc_1_1ReceivedBoundaryMessage.html",tooltip="A message class that is used to receive messages from bounded IPC channel."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="utility::ipc::ReceivedStream\lMessage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classutility_1_1ipc_1_1ReceivedStreamMessage.html",tooltip="A message class that is used to receive messages from stream IPC channel."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="utility::ipc::SentMessage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classutility_1_1ipc_1_1SentMessage.html",tooltip="A message class that encapsulate all data to send in a consecutive memory block."];
}
